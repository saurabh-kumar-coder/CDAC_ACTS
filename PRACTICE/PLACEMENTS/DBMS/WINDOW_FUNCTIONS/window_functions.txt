use windowfunctions;
-- ------------------------------------------------------------------------------------------
CREATE TABLE sales_data (
    id INT AUTO_INCREMENT PRIMARY KEY,
    salesperson VARCHAR(50),
    region VARCHAR(50),
    sales_amount DECIMAL(10,2),
    sale_date DATE
);

INSERT INTO sales_data (salesperson, region, sales_amount, sale_date) VALUES
('Alice', 'North', 5000, '2024-02-01'),
('Bob', 'South', 7000, '2024-02-02'),
('Charlie', 'North', 4000, '2024-02-03'),
('Alice', 'North', 6000, '2024-02-04'),
('Bob', 'South', 8000, '2024-02-05'),
('Charlie', 'North', 3000, '2024-02-06'),
('Alice', 'North', 5500, '2024-02-07'),
('Bob', 'South', 7500, '2024-02-08'),
('Charlie', 'North', 3500, '2024-02-09'),
('Alice', 'North', 6200, '2024-02-10'),
('Bob', 'South', 7200, '2024-02-11'),
('Charlie', 'North', 3800, '2024-02-12');

SELECT * FROM sales_data;
-- ----------------------------------------------------------------------------------
CREATE TABLE salesperson_details (
    salesperson_id INT AUTO_INCREMENT PRIMARY KEY,
    salesperson VARCHAR(50) UNIQUE,
    region VARCHAR(50),
    hire_date DATE,
    salary DECIMAL(10,2)
);

INSERT INTO salesperson_details (salesperson, region, hire_date, salary) VALUES
('Alice', 'North', '2020-06-15', 70000),
('Bob', 'South', '2019-08-20', 75000),
('Charlie', 'North', '2021-03-10', 68000),
('David', 'West', '2018-11-25', 72000);

-- ----------------------------------------------------------------------------------

SELECT 
	distinct salesperson,
    sales_amount,
    RANK() OVER(order by sales_amount DESC) as RNK
FROM sales_data;


-- JOINS

-- 1. Get Total Sales per Salesperson Along with Rank
SELECT 
	s.id, 
    s.salesperson, 
    s.region, 
    d.salary,
    SUM(s.sales_amount) as total_sales,
    RANK() OVER(ORDER BY SUM(s.sales_amount) DESC) as sales_rank
FROM SALES_DATA s
JOIN SALESPERSON_DETAILS d
ON s.salesperson = d.salesperson
GROUP BY s.salesperson;

-- 2. Running Total of Sales per Salesperson with Salary Details
SELECT
	s.salesperson,
    s.region,
    d.salary,
    s.sale_date,
    SUM(s.sales_amount) OVER(PARTITION BY s.salesperson order by s.sale_date) as running_total
FROM SALES_DATA s
JOIN SALESPERSON_DETAILS d
ON s.salesperson = d.salesperson;

-- 3. Finding the Highest Sale Per Region with a JOIN
SELECT 
	s.salesperson, 
    s.region,
    d.salary,
    MAX(s.sales_amount) OVER(partition by s.region) as max_sales_per_region
FROM sales_data s
JOIN salesperson_details d
ON s.salesperson = d.salesperson;

-- DENSE RANK
-- 4. Find the Rank of Salespersons Based on Sales Amount (Overall Ranking)
SELECT 
	salesperson,
    sales_amount,
    rank() over(order by sales_amount desc) as sales_rank,
    dense_rank() OVER(order by sales_amount desc) as sales_dense_rank
FROM SALES_DATA;
